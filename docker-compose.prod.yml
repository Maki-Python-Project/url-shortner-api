services:
  web:
    build:
      context: ./app
      dockerfile: Dockerfile.prod
    command: gunicorn -c gunicorn.conf.py base.wsgi:application
    volumes:
      - static_volume:/home/app/web/staticfiles
      - media_volume:/home/app/web/mediafiles
    expose:
      - 8000
    env_file:
      - ./.env.prod
    depends_on:
      - db
  db:
    image: postgres:14.5
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    env_file:
      - ./.env.prod.db
  nginx:
    build: ./nginx
    volumes:
      - ./nginx/certificates:/etc/ssl/certs
      - static_volume:/home/app/web/staticfiles
      - media_volume:/home/app/web/mediafiles
    ports:
      - 80:80
      - 443:443
    depends_on:
      - web
  celery:
    restart: always
    build:
        context: .
    command: celery -A base worker -l info
    volumes:
        - celery_data:/var/lib/celery/data/
    env_file:
      - ./.env.dev
    depends_on:
      - db
      # - redis
      # - web
  rabbitmq3:
    image: rabbitmq:3-management-alpine
    ports:
        - 5672:5672
        - 15672:15672
volumes:
  postgres_data:
  celery_data:
  media_volume:
  static_volume:
